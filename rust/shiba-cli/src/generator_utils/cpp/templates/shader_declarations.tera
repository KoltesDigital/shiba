{% if passes | length == 1 %}
	SHIBA_VARIABLE GLint shibaProgram;
{% else %}
	SHIBA_VARIABLE GLint shibaPrograms[{{ passes | length }}];
{% endif %}

SHIBA_CONST char *_shibaShaderPassCodes[] = {
	{% for pass in passes %}
		{{ pass.vertex | string_literal }},
		{{ pass.fragment | string_literal }},
	{% endfor %}
};

{% if shader_codes.after_stage_variables %}
	SHIBA_CONST char *_shibaShaderAfterStageVariablesCode = {{ shader_codes.after_stage_variables | string_literal }};
{% endif %}

{% if shader_codes.before_stage_variables %}
	SHIBA_CONST char *_shibaShaderBeforeStageVariablesCode = {{ shader_codes.before_stage_variables | string_literal }};
{% endif %}

{% if shader_codes.fragment_specific %}
	SHIBA_CONST char *_shibaShaderFragmentSpecificCode = {{ shader_codes.fragment_specific | string_literal }};
{% endif %}

{% if shader_codes.vertex_specific %}
	SHIBA_CONST char *_shibaShaderVertexSpecificCode = {{ shader_codes.vertex_specific | string_literal }};
{% endif %}

{% for uniform_array in uniform_arrays %}
	SHIBA_CONST int shiba{{ uniform_array.type_name | uppercase_first }}UniformLocationIndex = {{ loop.index - 1 }};
	SHIBA_CONST int shiba{{ uniform_array.type_name | uppercase_first }}UniformCount = {{ uniform_array.variables | length }};
	SHIBA_VARIABLE {{ uniform_array.type_name | to_opengl_type }} shiba{{ uniform_array.type_name | uppercase_first }}Uniforms[{{ uniform_array.variables | length }}];
	{% for variable in uniform_array.variables %}
		#define {{ variable.name }} shiba{{ uniform_array.type_name | uppercase_first }}Uniforms[{{ loop.index - 1 }}]
	{% endfor %}
{% endfor %}

SHIBA_VARIABLE int shibaUniformLocations[{{ passes | length }}][{{ uniform_arrays | length }}];
